////////////////////////////////////////////////////////////////////////////
// Module : ETC_Writer.java
// Author : Ma, Yu-Seung
// COPYRIGHT 2005 by Yu-Seung Ma, ALL RIGHTS RESERVED.
////////////////////////////////////////////////////////////////////////////

package mujava.op.exception;

import java.io.IOException;

import mugamma.MutantCodeWriter;
import mujava.IMutantInfo;
import openjava.ptree.AllocationExpression;
import openjava.ptree.ParseTree;
import openjava.ptree.ParseTreeException;

/**
 * <p>
 * Description:
 * </p>
 * <p>
 * Copyright: Copyright (c) 2005 by Yu-Seung Ma, ALL RIGHTS RESERVED
 * </p>
 * 
 * @author Yu-Seung Ma
 * @version 1.0
 */

public class ETC_Writer extends MutantCodeWriter {
	AllocationExpression original = null;

	AllocationExpression mutant = null;

	public ETC_Writer(IMutantInfo mutantFile) throws IOException {
		super(mutantFile);
	}

	public void setMutant(AllocationExpression a, AllocationExpression b) {
		original = a;
		mutant = b;
	}

	boolean eq(ParseTree p, ParseTree q) {
		if (p == null && q == null)
			return true;
		if (p == null || q == null)
			return false;
		return (p.getObjectID() == q.getObjectID());
	}

	public void visit(AllocationExpression p) throws ParseTreeException {
		if (eq(p, original)) {
			super.visit(mutant);
			// -------------------------
			String log_str = p.toString() + "  -->  " + mutant.toString();
			super.mutantInfo.setChangeLocation(getLineNumber());
			super.mutantInfo.setChangeLog(removeNewline(log_str));
			// -------------------------
		} else {
			super.visit(p);
		}
	}
}
